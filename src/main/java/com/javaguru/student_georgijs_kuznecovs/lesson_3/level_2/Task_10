- Где ханитятся обьекты класса String?
    1)Куча: Область хранения для объектов. (По одному на экземпляр JVM)
    2)Пул строк : область для хранения всех строковых значений, которые ты создаешь в своей программе.

    Он просто возвращает текущую строку (если она находится в куче, она возвращается из кучи / если она находится в пуле строковых констант, она возвращается из пула строковых констант)
    Кроме того, начиная с Java 7, строковый пул (который, как я предполагаю, подразумевается под "постоянным пулом") находится в куче. Поэтому, даже если он находится в пуле строк, он все равно находится в куче.


- Как определить длину строки?

    String str = "Hello Java!";
    int length = str.length();
    System.out.println("Длина строки: " + length);

- Как сравнивать две строки?

    System.out.println(s1.equals(s2));
    System.out.println(address1.equalsIgnoreCase(address2));
    System.out.println(s1 == s2.intern());
https://javarush.ru/groups/posts/equals-java-sravnenie-strok

- Что такое String Pool и зачем он нужен?
    Пул строк — область для хранения всех строковых значений, которые ты создаешь в своей программе.
    Он нужен для экономии памяти - туда помещается строка с нужным тебе текстом, и в дальнейшем вновь созданные ссылки ссылаются на одну и ту же область памяти, нет нужды каждый раз выделять дополнительную память.
    Но с помощью оператора new можно принудительно создать идентичную строку в новой области памяти!


Область метода: Область хранения для файлов скомпилированных классов. (По одному на экземпляр JVM)

Куча: Область хранения для объектов. (По одному на экземпляр JVM)

Стек Java: Область хранения для локальных переменных, результаты промежуточных операций. (По одному на поток)

Регистрация ПК: Сохраняет адрес следующей команды, которая должна быть выполнена, если следующая инструкция является нативным методом, тогда значение в регистре pc будет undefined. (По одному на поток)

Нативные стеки методов: помогает выполнять собственные методы (методы, написанные на языках, отличных от Java). (По одному на поток)